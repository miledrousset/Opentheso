<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <script type="text/javascript" src="resources/js/d3.v5.min.js"></script>
    </h:head>

    <h:body>

     
        
        
        
<div id="graph-container"></div>

        <script>
          // Exemple de données hiérarchiques
            var data = {
              name: "Root",
              children: [
                {
                  name: "Node A",
                  children: [
                    { name: "Node A.1" },
                    { name: "Node A.2" }
                  ]
                },
                {
                  name: "Node B",
                  children: [
                    { name: "Node B.1" },
                    { name: "Node B.2" }
                  ]
                }
              ]
            };

          // Configuration du conteneur du graphe
          var width = 620;
          var height = 530;

          // Création de la hiérarchie à partir des données
          var hierarchy = d3.hierarchy(data);

          // Configuration de la mise en page du graphe
          var treeLayout = d3.tree().size([width, height]);

          // Mise en page du graphe en utilisant la hiérarchie
          var treeData = treeLayout(hierarchy);

          // Création de l'élément SVG
          var svg = d3.select("#graph-container")
            .append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", "translate(10, 1)"); // Ajustement des marges

          // Ajout des liens entre les nœuds
          svg.selectAll(".link")
            .data(treeData.links())
            .enter().append("path")
            .attr("class", "link")
            .attr("d", d3.linkHorizontal()
              .x(function(d) { return d.y; })
              .y(function(d) { return d.x; }));

          // Ajout des cercles pour représenter les nœuds
          svg.selectAll(".node")
            .data(treeData.descendants())
            .enter().append("circle")
            .attr("class", "node")
            .attr("cx", function(d) { return d.y; })
            .attr("cy", function(d) { return d.x; })
            .attr("r", 5);

          // Ajout des étiquettes pour les nœuds
          svg.selectAll(".label")
            .data(treeData.descendants())
            .enter().append("text")
            .attr("class", "label")
            .attr("x", function(d) { return d.y + 10; })
            .attr("y", function(d) { return d.x; })
            .text(function(d) { return d.data.name; });
        </script>        
        
        
    </h:body>
</html>