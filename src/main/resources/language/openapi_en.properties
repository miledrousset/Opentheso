responses.400.description=Syntax error in the request
responses.concept.404.description=No concept exists with this ID in the selected thesaurus
responses.503.description=No connection to the server
responses.500.description=Internal server error
responses.group.404.description=Group not found
responses.theso.404.description=Thesaurus not found

testWS.summary=Tests the availability of the web service
testWS.description=Previous version: `/ping`\n\nReturns Pong if the web service is available
testWS.200.description=Pong message

searchAutocomplete.description=Previous version: `/api/autocomplete/{input}?theso=<idTheso>` or `/api/autocomplete?value=<input>&theso=<idTheso>`\n\nRetrieves terms close to the entered term to enable autocomplete with optional filtering by language and group.
searchAutocomplete.200.description=File containing terms close to the input
searchAutocomplete.idThesaurus.description=Thesaurus to search the user input
searchAutocomplete.input.description=User input
searchAutocomplete.lang.description=Language in which to search the user input
searchAutocomplete.summary=Searches for terms close to the entered term
searchAutocomplete.group.description=Group in which to search the user input
searchAutocomplete.full.description=`true` if more information about the concept is to be returned. Additional information includes `prefLabel`, `altLabel`, and concept definition.
searchAutocomplete.404.description=No results found

getConceptByArk.summary=Retrieves information about a concept based on its Ark ID
getConceptByArk.description=Previous version: `/api/{naan}/{idArk}.{format}`\n\nRetrieves information about a concept based on its Ark ID in JSON, JSON-LD, Turtle, or RDF/XML formats
getConceptByArk.200.description=JSON file containing concept information
getConceptByArk.naan.description=NAAN identifier of the organization
getConceptByArk.idArk.description=Ark identifier of the concept

getIdArkOfConceptNT.summary=Retrieves child Ark IDs for a given concept
getIdArkOfConceptNT.description=Previous version: `/api/ark/allchilds?ark={naan}/{idArk}`\n\nReturns a JSON file containing Ark IDs of child concepts for the specified Ark ID.
getIdArkOfConceptNT.200.description=JSON file containing child Ark IDs
getIdArkOfConceptNT.400.description=Incorrect request, ensure you have specified the Ark ID
getIdArkOfConceptNT.arkId.description=Ark ID of the concept for which child concepts are to be found.<br>
getIdArkOfConceptNT.naan.description=NAAN identifier, corresponding to the first part of the Ark ID

searchJsonForWidgetArk.summary=Obtains the complete path of a concept based on its Ark ID
searchJsonForWidgetArk.description=Previous version: `/api/searchwidgetbyark?q={idArks}&lang={lang}`\n\nObtains the complete path of a concept represented in a JSON file
searchJsonForWidgetArk.200.description=File containing the search result
searchJsonForWidgetArk.q.description=Ark IDs of the concepts being searched, separated by commas
searchJsonForWidgetArk.lang.description=Language code in which to perform the search
searchJsonForWidgetArk.full.description=`true` if you also want to retrieve translations (`altLabels`), `false` otherwise

getPrefLabelFromArk.summary=Retrieves a prefLabel in a given language based on an Ark ID
getPrefLabelFromArk.description=Previous version: `/api/preflabel.{lang}/{naan}/{idArk}.json`\n\nRetrieves a `prefLabel` in a given language based on an Ark ID
getPrefLabelFromArk.200.description=JSON file containing the `prefLabel`
getPrefLabelFromArk.naan.description=NAAN identifier of the organization
getPrefLabelFromArk.idArk.description=Ark identifier of the concept
getPrefLabelFromArk.lang.description=Language of the `prefLabel`

getSkosFromidConcept.summary=Retrieves a concept based on its ID and retrieves it in a specified format.
getSkosFromidConcept.description=Previous version: `/api/<idThesaurus>.<idConcept>.<format>`\n\nRetrieves a concept from a given thesaurus based on its ID specifying one of the possible formats:<br>- JSON<br>- JSON-LD<br>- RDF
getSkosFromidConcept.200.description=Skos describing the concept with the corresponding ID
getSkosFromidConcept.idTheso.description=ID of the thesaurus from which to retrieve the concept.
getSkosFromidConcept.idConcept.description=Identifier of the concept to retrieve.

getJsonFromIdConceptWithLabels.summary=Retrieves labels of a concept
getJsonFromIdConceptWithLabels.description=Previous version: `/api/{idTheso}.{idConcept}.labels`\n\nRetrieves labels of a concept from a given thesaurus based on its ID.
getJsonFromIdConceptWithLabels.200.description=JSON containing labels of the concept with the corresponding ID
getJsonFromIdConceptWithLabels.idConcept.description=ID of the concept to retrieve
getJsonFromIdConceptWithLabels.lang.description=Language of the concept to retrieve
getJsonFromIdConceptWithLabels.idTheso.description=ID of the thesaurus to retrieve

getDatasForGraph.summary=Obtains data for displaying the D3js graph starting from a concept
getDatasForGraph.description=Previous version: `/api/graph?theso=<idTheso>&id=<idConcept>&lang=<lang>`\n\nData formatted for displaying the D3js graph
getDatasForGraph.200.description=Data for displaying the D3js graph
getDatasForGraph.idTheso.description=ID of the thesaurus from which to retrieve the concept.
getDatasForGraph.idArk.description=ID of the concept to retrieve
getDatasForGraph.lang.description=Language of the concept to retrieve

getDatasForGraphByTheso.summary=Obtains data for displaying the D3js graph for the entire thesaurus

getBrancheOfConcepts.summary=Retrieves an expansion branch of a concept
getBrancheOfConcepts.description=Previous version: `/api/expansion/concept?theso=<idTheso>&id=<idConcept>&way=<top|down>`\n\nRetrieves an expansion branch of a concept from a given thesaurus based on its ID. Either from a concept to find the root or to retrieve an entire branch from the root.
getBrancheOfConcepts.200.description=File containing the branch of the concept
getBrancheOfConcepts.idTheso.description=ID of the thesaurus from which to retrieve the concept.
getBrancheOfConcepts.idConcept.description=ID of the concept to retrieve
getBrancheOfConcepts.way.description=Direction of expansion, `top` if searching for the root, `down` if retrieving the entire branch from the root

getNarrower.summary=Retrieves the list of narrower terms (NT)
getNarrower.description=Previous version: `/api/narrower?theso=<idTheso>&id=<idConcept>&lang=<lang>`\n\nRetrieves the list of narrower terms (NT) for a concept from a given thesaurus based on its ID.
getNarrower.200.description=List of narrower terms (NT)
getNarrower.idTheso.description=ID of the thesaurus from which to retrieve the concept.
getNarrower.idConcept.description=ID of the concept to retrieve
getNarrower.lang.description=Language of the concept to retrieve

getConceptsFromDate.summary=Retrieves the list of concepts modified since a given date
getConceptsFromDate.description=Previous version: `/api/getchangesfrom?theso=<idTheso>&date=<date>&format=<format>`\n\nRetrieves the list of concepts modified since a given date
getConceptsFromDate.200.description=List of concepts modified since a given date
getConceptsFromDate.idTheso.description=ID of the thesaurus from which to retrieve concepts.
getConceptsFromDate.date.description=Date of the last modification of concepts to retrieve in the format YYYY-MM-DD

getConceptByHandle.summary=Retrieves information of a concept based on its Handle ID
getConceptByHandle.description=Previous version: `/api/{hdl1}.{hdl2}.{hdl3}/{naan}.{id}.{format}`\n\nRetrieves information of a concept based on its Handle ID in JSON, JSON-LD, Turtle, or RDF/XML formats
getConceptByHandle.200.description=JSON file containing the concept information
getConceptByHandle.handle.description=Handle identifier of the organization in the format `hdl1.hdl2.hdl3`
getConceptByHandle.idHandle.description=Handle ID of the concept

search.summary=Searches for a concept filtering by thesaurus and language
search.description=Previous version: `/api/search?q={input}&theso={idTheso}`\n\nPerforms a concept search using a value with filtering options for thesaurus and language.<br>It's possible to select one of the following formats:\n- RDF\n- JSON-LD\n- JSON\n- TURTLE
search.200.description=File containing the search result
search.idTheso.description=ID of the thesaurus to search within
search.q.description=Input corresponding to the searched term
search.lang.description=Language in which to search
search.group.description=Group in which to perform the search
search.match.description=`exact` limits the search to exact matches.\n<br>\
    `exactone` limits the search to exact matches but sends only one response.

searchNotation.summary=Searches for a concept by notation
searchNotation.description=Previous version: `/api/search?theso=<idTheso>&q=notation:<input>`\n\nPerforms a search by notation with options to filter by language or group.

searchPrefLabel.summary=Searches for a concept by prefLabel
searchPrefLabel.description=Performs a search by `prefLabel` with options to filter by language or group.

searchByArkId.summary=Permits searching by Ark ID with a thesaurus filter
searchByArkId.description=Previous version: `/api/search?q=ark:{naan}/{idArk}`\n\nPerforms a search by Ark ID with options to filter by language
searchByArkId.q.description=Ark ID to search for
searchByArkId.showLabels.description=`true` to display labels, `false` otherwise
searchByArkId.lang.description=Desired language for the thesaurus

searchJsonForWidget.summary=Obtains the full path of a concept
searchJsonForWidget.description=Previous version: `/api/searchwidget?theso=<idTheso>&q=<input>&lang=<lang>`\n\nObtains the full path of a concept represented in a JSON file
searchJsonForWidget.q.description=Concept name being searched
searchJsonForWidget.group.description=Group(s) in which to search (Groups must be separated by commas if multiple)
searchJsonForWidget.arkgroup.description=ARK Group(s) in which to search (Groups must be separated by commas if multiple)
searchJsonForWidget.full.description=`true` if synonyms (`altLabels`) should also be retrieved, `false` otherwise
searchJsonForWidget.exactMatch.description=`true` for an exact match search, `false` otherwise

getGroupFromIdThesoIdGroup.summary=Retrieves information of a group based on its internal identifier
getGroupFromIdThesoIdGroup.description=Previous version: `/api/info/list?theso={idTheso}&group={idGroup}`\n\nRetrieves information of a group based on its identifier
getGroupFromIdThesoIdGroup.200.description=Group information
getGroupFromIdThesoIdGroup.idTheso.description=Thesaurus identifier
getGroupFromIdThesoIdGroup.idGroup.description=Internal identifier of the group

getAllBranchOfGroup.summary=Retrieves an entire branch of groups based on internal identifiers
getAllBranchOfGroup.description=Previous version: `/api/all/group?id={idGroups}&theso={idTheso}&format={format}`\n\nRetrieves a branch of a group based on its identifier
getAllBranchOfGroup.200.description=Information of the group branch
getAllBranchOfGroup.idTheso.description=Thesaurus identifier
getAllBranchOfGroup.idGroups.description=Internal identifiers of groups separated by commas

getAllBranchOfGroupAsTree.summary=Retrieves an entire branch of groups with the complete path to the root
getAllBranchOfGroupAsTree.description=Previous version: 
getAllBranchOfGroupAsTree.200.description=Information of the group branch
getAllBranchOfGroupAsTree.idTheso.description=Thesaurus identifier
getAllBranchOfGroupAsTree.idGroups.description=Internal identifiers of groups separated by commas

getGroupIdFromArk.summary=Allows retrieving a group ID associated with an ARK identifier
getGroupIdFromArk.description=Previous version: `/api/group/{naan}/{idArk}`\n\nSearches for the group identifier associated with the given ARK identifier
getGroupIdFromArk.200.description=Group identifier corresponding to the Ark ID
getGroupIdFromArk.naan.description=NAAN identifier
getGroupIdFromArk.arkId.description=ARK identifier

getThesoFromId.summary=Allows retrieving an entire thesaurus
getThesoFromId.description=Previous version: `/api/all/theso?id=<idTheso>&format=<format>`\n\nFully retrieves the thesaurus specified by its ID.\n**Note: If the thesaurus is large, this operation may take a considerable amount of time**
getThesoFromId.200.description=Returns a file containing the thesaurus
getThesoFromId.thesaurusId.description=Thesaurus identifier to retrieve

getThesoGroupsFromId.summary=Allows retrieving the top concepts of the specified thesaurus in the available languages
getThesoGroupsFromId.description=Previous version: `/api/info/list?topconcept=all&theso=<idTheso>&lang=<lang>`\n\nReturns a file containing the top concepts of the specified thesaurus.\nIf no language is specified, the response will include all languages.
getThesoGroupsFromId.200.description=Returns a file containing the list of Top Concepts of the thesaurus
getThesoGroupsFromId.thesaurusId.description=Thesaurus identifier to retrieve
getThesoGroupsFromId.lang.description=Language of the terms to retrieve

getInfoLastUpdate.summary=Retrieves the last modification date of a thesaurus
getInfoLastUpdate.description=Previous version: `/api/info/lastupdate?theso=<idTheso>`\n\nAllows retrieving the date of the last modification of a thesaurus
getInfoLastUpdate.200.description=Returns the last modification date of the thesaurus in YYYY-MM-DD format
getInfoLastUpdate.thesaurusId.description=Thesaurus identifier to retrieve

getListLang.summary=Retrieves the list of languages of a thesaurus
getListLang.description=Previous version: `/api/info/listLang?theso=<idTheso>`\n\nAllows to know the list of languages of a thesaurus
getListLang.200.description=Returns the list of languages of a thesaurus in JSON format
getListLang.thesaurusId.description=Thesaurus identifier

getThesoFromIdFlat.summary=Allows retrieving an entire thesaurus as a flat JSON list
getThesoFromIdFlat.description=Previous version: `/api/jsonlist/theso?id=<idTheso>&lang=<lang>`\n\nFully retrieves the thesaurus specified by its ID.\n**Note: If the thesaurus is large, this operation may take a long time**
getThesoFromIdFlat.200.description=Returns a file containing the thesaurus
getThesoFromIdFlat.thesaurusId.description=Thesaurus identifier to retrieve
getThesoFromIdFlat.lang.description=Language of the terms to retrieve

getListAllPublicTheso.summary=Allows retrieving all public thesauri
getListAllPublicTheso.description=Previous version: `/api/info/list?theso=all`\n\nRetrieves a list of all public thesauri along with the languages in which they are available.
getListAllPublicTheso.200.description=List containing the IDs of public thesauri.

definition.description=Opentheso is a multilingual and multi-hierarchical thesaurus manager.
definition.tags.test.description=Allows checking if the API is functional.
definition.tags.concept.description=Contains all actions available on concepts.
definition.tags.thesaurus.description=Contains all actions related to thesauri.
definition.tags.group.description=Contains actions related to groups.
definition.tags.ark.description=Contains operations related to ARK identifiers. An ARK identifier is formatted as follows: ark:/{naan}/{ark}.
definition.tags.ontome.description=Possible actions with the Ontome platform
definition.tags.conceptWrite.description=Ecriture de candidats

testAuth.summary=Allows checking if the authentication system is functional
testAuth.description=Uses the CLE-API-EXEMPLE and checks if the key entered by the user exists in the database. Returns the possible errors.
testAuth.200.description=JSON file indicating that the provided key is valid
testAuth.403.description=The provided API key is invalid or does not exist.
testAuth.401.description=No API key provided

getAllLinkedConceptsWithOntome.summary=Retrieves all concepts in the thesaurus that have an `exactMatch` relationship with CIDOC classes
getAllLinkedConceptsWithOntome.description=Previous version: `/api/ontome/linkedConcept?theso=<idTheso>&class=<cidocClass>`<br>\n\nOpentheso allows linking CIDOC-CRM classes via the Ontome platform, the link is made through a reciprocal relationship constructed as follows:\nIn Opentheso, if a high-level concept matches a CIDOC-CRM class, we can then add an `exactMatch` alignment between the CIDOC-CRM class and the concept<br>\nExample:<br>\nThe concept "Geographical place" has an `exactMatch` with "https://ontome.net/class/363".<br>\nThis feature retrieves all concepts in the thesaurus that have an `exactMatch` relationship with CIDOC classes
getAllLinkedConceptsWithOntome.200.description=JSON file containing the concepts
getAllLinkedConceptsWithOntome.idTheso.description=Thesaurus in which the concepts are.
getAllLinkedConceptsWithOntome.cidocClass.description=CIDOC class

getUriFromArk.summary=Redirects to the page of the resource corresponding to the entered ARK identifier.
getUriFromArk.description=Previous version: `/api/ark:/{naan}/{idArk}`\n\nRedirects to the page of the resource corresponding to the entered ARK identifier.
getUriFromArk.307.description=Redirect to the corresponding resource page.
getUriFromArk.404.description=No resource is associated with this ARK identifier
getUriFromArk.naan.description=NAAN identifier of the organization
getUriFromArk.idArk.description=Resource identifier
getUriFromArk.200.description=Page of the requested resource after redirection

getAllGroupsFromTheso.summary=Retrieves all groups of a thesaurus
getAllGroupsFromTheso.description=Previous version: `/api/info/list?theso=<idTheso>&group=all`\n\nAllows retrieving all groups of a thesaurus in JSON format
getAllGroupsFromTheso.idTheso.description=Thesaurus for which to retrieve the groups
getAllGroupsFromTheso.200.description=JSON file containing the collections of a thesaurus


getSubGroupsFromTheso.summary=Recovers the sub-collections for a collection in a thesaurus
getSubGroupsFromTheso.description=Old version: `/api/info/list?theso=<idTheso>&group=all`\nEnables you to retrieve the sub-collections for a given collection in a thesaurus in JSON format
getSubGroupsFromTheso.idTheso.description=Thesaurus for which you want to retrieve collections
getSubGroupsFromTheso.200.description=JSON file containing the sub-collections of a thesaurus

addCandidate.summary=Permet d'ajouter un candidat
addCandidate.description=Permet d'ajouter un candidat à partir du JSON donné
addCandidate.schemaTitle=Exemple de candidat
